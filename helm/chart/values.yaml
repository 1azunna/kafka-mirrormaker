# Default values for kafka-mirrormaker.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: "docker.io/zunni/kafka-mirrormaker"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest-3.8.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

kafka:
  heapOptions: "-Xms512M"
  name: "" # The MirrorSourceConnector Name https://kafka.apache.org/documentation/#mirror_connector_name, defaults to the release name
  source:
    bootstrapServers: ""
    groupId: "" # The source connector group id, defaults to {{ .Release.Name }}-group
    config: {}
  target:
    bootstrapServers: ""
    groupId: "" # The target connector group id, defaults to {{ .Release.Name }}-group
    config: {}
  bidirectionalReplication: false
  topicPatterns: ".*" # The defaut topic filter class topic filter regex.
  groupPatterns: ".*"
  topicRemappingPatterns: "" # The topic replication class regex:replacement patterns list separated by a pipe |.
  offsetsTopic: "" # The offsets topic name, defaults to {{ .Release.Name }}-offsets
  configTopic: "" # The config topic name, defaults to {{ .Release.Name }}-config
  statusTopic: "" # The status topic name, defaults to {{ .Release.Name }}-status
  secretConfig: {}
  config:
    # Default Task and Replication Settings
    tasks.max: 10
    replication.factor: -1
    offset-syncs.topic.replication.factor: -1
    heartbeats.topic.replication.factor: -1
    checkpoints.topic.replication.factor: -1
    config.storage.replication.factor: -1
    offset.storage.replication.factor: -1
    status.storage.replication.factor: -1
    refresh.topics.enabled: true
    sync.topic.configs.enabled: false
    sync.topic.acls.enabled: false
    sync.group.offsets.enabled: true
    refresh.topics.interval.seconds: 60
    topics.exclude: ".*\\.internal,.*-internal,heartbeats,mirrormaker-2.*,mm2-.*"

## Monitoring
## Kafka MirrorMaker JMX Settings
## ref: https://kafka.apache.org/documentation/#monitoring
jmx:
  port: 9998
  enabled: true
## Prometheus Exporter Configuration
## ref: https://prometheus.io/docs/instrumenting/exporters/
prometheus:
  ## JMX Exporter Configuration
  ## ref: https://github.com/prometheus/jmx_exporter
  jmx:
    image: bitnami/jmx-exporter
    imageTag: 1.0.1
    port: 5556
    ## Resources configuration for the JMX exporter container.
    ## See the `resources` documentation above for details.
    resources: {}
  serviceMonitor:
    enabled: true

extraEnv: []
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  limits:
    cpu: 2
    memory: 4Gi
  requests:
    cpu: 100m
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

volumes: []

volumeMounts: []
